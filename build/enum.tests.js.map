{"version":3,"file":"enum.tests.js","sources":["../src/define.js","../src/arg-parse.js","../src/create-proto.js","../src/enum.js","../src/assign.js","../src/assign-to.js","../tests/api.js","../tests/assign.js","../tests/assignTo.js","../tests/create.js"],"sourcesContent":["\nvar\n  define,\n  defaults = {\n    configurable: false,\n    enumerable: true,\n    writable: false\n  };\n\ndefine = function( instance, name, value, traits={}) {\n  traits = Object.assign({}, defaults, traits, { value });\n  return Object.defineProperty( instance, name, traits );\n};\n\nexport default define;\n","\n/**\n * possible argument signatures\n *  $enum( ...names )\n *  $enum({ name: value })\n *  $enum([ names ])\n *  $enum( startIndex, [ names ])\n *\n * transformed to [ keys<Array>, [values<Array>] ]\n**/\nvar\n  intRange,\n  getKeyValueFromObject,\n\nintRange = function( first, last ) {\n  var\n    curr = typeof first === 'number' ? first : 0,\n    arr = [ curr ];\n\n  while ( last > ++curr ) {\n    arr.push( curr );\n  }\n\n  return arr;\n};\n\ngetKeyValueFromObject = function( object ) {\n  var\n    keys = [],\n    values = [];\n\n  Object.keys( object ).forEach( key => {\n    keys.push( key );\n    values.push( object[ key ]);\n  });\n\n  return [ keys, values ];\n};\n\nexport default function argParse( ...args ) {\n  var [ first, second ] = args;\n\n  // single argument, ( object | array | string )\n  if ( args.length === 1 ) {\n    let\n      firstType = typeof first,\n      firstIsArray = Array.isArray( first );\n\n    // arg is a single object of key value pairs\n    if ( firstType !== 'string' && !firstIsArray ) {\n      return getKeyValueFromObject( first );\n    }\n\n    // argument is a single array\n    if ( firstIsArray ) {\n      return [ first, intRange( 0, first.length )];\n    }\n\n    // argument is a 'single string'\n    return [ args, [ 0 ]];\n  }\n\n  // two arguments, ( startIndex, [ names ])\n  if ( args.length === 2 && Array.isArray( second )) {\n    return [ second, intRange( first, second.length + first )];\n  }\n\n  // \"unlimited\" args, ( ...names );\n  return [ args, intRange( 0, args.length )];\n}\n","\nimport define from './define';\n\nexport default function createProto( keys, values, constructor ) {\n  var proto = {};\n\n  define( proto, 'length', keys.length );\n  define( proto, 'keys', keys, { enumerable: false });\n  define( proto, 'values', values, { enumerable: false });\n  define( proto, 'toString' );\n  define( proto, Symbol.toStringTag, function(){}, { enumerable: false });\n  define( proto, Symbol.iterator );\n\n  proto.constructor = constructor;\n  return Object.freeze( proto );\n}\n","\nimport define from './define';\nimport argParse from './arg-parse';\nimport createProto from './create-proto';\n\nvar factory;\n\nfactory = function( keys, values ) {\n//  console.log( 'factory arguments: keys, values' );\n//  console.log( keys );\n//  console.log( values );\n  var Enum = function() {\n    keys.forEach(( key, index ) => define( this, key, values[ index ]));\n  };\n\n  Enum.prototype = createProto( keys, values, Enum );\n  return Object.freeze( new Enum());\n};\n\nexport default function $enum( ...args ) {\n  return factory( ...argParse( ...args ));\n}\n","\nimport define from './define';\nimport $enum from './enum';\n\nvar assign;\n\nassign = function ( enumInstance, assignTo ) {\n  for ( let { key, value } of enumInstance ) {\n    define( assignTo, key, value );\n  }\n};\n\nexport default assign;\n","\nimport argParse from './arg-parse';\nimport $enum from './enum';\n\nvar assignTo;\n\nassignTo = function assignTo( assignee, ...args ) {\n  assign( $enum( ...argParse( ...args )), assignee );\n};\n\nexport default assignTo;\n","\nimport test from 'tape';\nimport $enum, { assign, assignTo } from '../src/api';\n\ntest( 'proper default and named exports', function( assert ) {\n  assert.equal( typeof $enum, 'function', '$enum is a function' );\n  assert.equal( typeof assign, 'function', 'assign is a function and named export' );\n  assert.equal( typeof assignTo, 'function', 'assignTo is a function and named export' );\n  assert.end();\n});\n\n","\nimport test from 'tape';\n\nimport $enum, { assign } from '../src/api';\n\ntest.skip( 'assign takes enum instance', function( assert ) {\n  assert.fail( 'todo' );\n});\n","\nimport test from 'tape';\n\nimport { assignTo } from '../src/api';\n\ntest.skip( 'assignTo takes enum arguments', function( assign ) {\n  assign.fail( 'todo' );\n});\n\n","\nimport test from 'tape';\nimport $enum from '../src/api';\n\nvar\n  descriptor,\n  addValue;\n\ndescriptor = {\n  configurable: false,\n  enumerable: true,\n  writable: false\n};\n\naddValue = function( value ) {\n  return Object.assign( descriptor, { value });\n};\n\n/* constructor tests */\ntest( '$enum( ...names )', function( assert ) {\n  var\n    i = 0,\n    args = [ 'zero', 'one', 'two', 'three' ],\n    myEnum = $enum( ...args );\n\n  for ( let prop in myEnum ) {\n    if ( myEnum.hasOwnProperty( prop )) {\n      assert.deepEqual(\n        Object.getOwnPropertyDescriptor( myEnum, prop ),\n        addValue( i ),\n        `property ${ prop } has enum descriptor with value ${ i }`\n      );\n      i++;\n    }\n  }\n\n  assert.equal( i, args.length, 'iterated properties count matches argument list length' );\n  assert.end();\n});\n\ntest( '$enum( { name: value })', function( assert ) {\n  var\n    length = 0,\n    argument = {\n      1: 'a',\n      2: 'b',\n      3: 'c',\n      4: 'd',\n      5: 'e'\n    },\n    myEnum = $enum( argument );\n\n  for ( let prop in argument ) {\n    if ( argument.hasOwnProperty( prop )) {\n      let value = argument[ prop ];\n      assert.equals(\n        value,\n        myEnum[ prop ],\n        `enum value mirrors object based argument, ${ prop }:${ value }`\n      );\n      length++;\n    }\n  }\n\n  for ( let prop in myEnum ) {\n    if ( myEnum.hasOwnProperty( prop )) {\n      assert.deepEqual(\n        Object.getOwnPropertyDescriptor( myEnum, prop ),\n        addValue( argument[ prop ]),\n        `property ${ prop } has enum descriptor with value ${ myEnum[ prop ]}`\n      );\n      length--;\n    }\n  }\n\n  assert.equal( length, 0, 'iterated properties count matches for both argument and enum' );\n  assert.end();\n});\n\ntest( '$enum([ names ])', function( assert ) {\n  var\n    i = 0,\n    args = [ 'zero', 'one', 'two' ],\n    myEnum = $enum( args );\n\n  for ( let prop in myEnum ) {\n    if ( myEnum.hasOwnProperty( prop )) {\n      assert.deepEqual(\n        Object.getOwnPropertyDescriptor( myEnum, prop ),\n        addValue( i ),\n        `property ${ prop } has enum descriptor with value ${ i }`\n      );\n      i++;\n    }\n  }\n\n  assert.equals( i, args.length, 'iterated properties count matches argument length' );\n  assert.end();\n});\n\ntest( '$enum( startIndex, [ names ])', function( assert ) {\n  var\n    i = 0,\n    startIndex = 2,\n    enumValues,\n    enumList = [ 'two', 'three', 'four', 'five', '6' ],\n    myEnum = $enum( startIndex, enumList );\n\n  enumValues = {\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    6: 6\n  };\n\n  for ( let prop in myEnum ) {\n    if ( myEnum.hasOwnProperty( prop )) {\n      let value = enumValues[ prop ];\n      assert.deepEqual(\n        Object.getOwnPropertyDescriptor( myEnum, prop ),\n        addValue( value ),\n        `property ${ prop } has enum descriptor with value ${ value }`\n      );\n      i++;\n    }\n  }\n\n  assert.equals( i, enumList.length, 'iterated properties count matches enum argument list' );\n  assert.end();\n});\n\n"],"names":["define","assign","assignTo"],"mappings":"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"}